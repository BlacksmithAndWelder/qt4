name: Build
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

   # services:
    #  postgres:
     #   image: postgres:latest
      #  env:
       #   POSTGRES_DB: projeto-b2
        #  POSTGRES_USER: postgres
         # POSTGRES_PASSWORD: admin
        #ports:
         # - 5432:5432
        #options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v3     

   # - name: Validate composer.json and composer.lock
   #   run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Remove vendor
      run:  rm -rf vendor

    - name: Install dependencies
      run:  composer install --prefer-dist --no-progress
         
    #composer require laravel/database-testing --dev
    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md
  tests:
      name: Tests
  
      runs-on: ubuntu-latest
      
      steps:
        - name: Checkout
          uses: actions/checkout@v2
          with:
            fetch-depth: 0
          
        - name: Setup PHP with Xdebug
          uses: shivammathur/setup-php@v2
          with:
            php-version: '8.1'
            coverage: xdebug
            
        - name: Install dependencies with composer
          run: |
            composer update --no-ansi --no-interaction --no-progress
            composer require mockery/mockery --dev
        
       # - name : eu que add banco de dados teste
       #   run: php artisan migrate --env=testing

          
       
        - name: Run tests with phpunit/phpunit
          run: vendor/bin/phpunit --coverage-clover=coverage.xml

          
        - name: SonarCloud Scan
          uses: SonarSource/sonarcloud-github-action@master
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    # - name: Run test suite
    #   run: composer run-script test
